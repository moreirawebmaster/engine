// Mocks generated by Mockito 5.4.6 from annotations
// in engine/test/unit/core/services/engine_token_service_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:engine/lib.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [IEngineLocalStorageRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockIEngineLocalStorageRepository extends _i1.Mock
    implements _i2.IEngineLocalStorageRepository {
  MockIEngineLocalStorageRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  bool exists(String? key) => (super.noSuchMethod(
        Invocation.method(
          #exists,
          [key],
        ),
        returnValue: false,
      ) as bool);

  @override
  _i3.Future<void> setObject<T>(
    String? key,
    T? data,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setObject,
          [
            key,
            data,
          ],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> setString(
    String? key,
    String? data,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setString,
          [
            key,
            data,
          ],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> setJson(
    String? key,
    dynamic data,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setJson,
          [
            key,
            data,
          ],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  T? getObject<T, TMap>(
    String? key, {
    T Function(TMap)? fromMap,
  }) =>
      (super.noSuchMethod(Invocation.method(
        #getObject,
        [key],
        {#fromMap: fromMap},
      )) as T?);

  @override
  String getString(String? key) => (super.noSuchMethod(
        Invocation.method(
          #getString,
          [key],
        ),
        returnValue: _i4.dummyValue<String>(
          this,
          Invocation.method(
            #getString,
            [key],
          ),
        ),
      ) as String);

  @override
  dynamic getJson(String? key) => super.noSuchMethod(Invocation.method(
        #getJson,
        [key],
      ));

  @override
  _i3.Future<void> remove(String? key) => (super.noSuchMethod(
        Invocation.method(
          #remove,
          [key],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> removeAll(List<String>? keys) => (super.noSuchMethod(
        Invocation.method(
          #removeAll,
          [keys],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> clearAll() => (super.noSuchMethod(
        Invocation.method(
          #clearAll,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
}

/// A class which mocks [IEngineTokenRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockIEngineTokenRepository extends _i1.Mock
    implements _i2.IEngineTokenRepository {
  MockIEngineTokenRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<_i2.EngineResult<String, _i2.EngineTokenResponseDto>> connect(
          _i2.EngineTokenRequestDto? dto) =>
      (super.noSuchMethod(
        Invocation.method(
          #connect,
          [dto],
        ),
        returnValue: _i3
            .Future<_i2.EngineResult<String, _i2.EngineTokenResponseDto>>.value(
            _i4.dummyValue<
                _i2.EngineResult<String, _i2.EngineTokenResponseDto>>(
          this,
          Invocation.method(
            #connect,
            [dto],
          ),
        )),
      ) as _i3.Future<_i2.EngineResult<String, _i2.EngineTokenResponseDto>>);

  @override
  _i3.Future<_i2.EngineResult<String, _i2.EngineTokenResponseDto>> refreshToken(
          _i2.EngineRefreshTokenRequestDto? dto) =>
      (super.noSuchMethod(
        Invocation.method(
          #refreshToken,
          [dto],
        ),
        returnValue: _i3
            .Future<_i2.EngineResult<String, _i2.EngineTokenResponseDto>>.value(
            _i4.dummyValue<
                _i2.EngineResult<String, _i2.EngineTokenResponseDto>>(
          this,
          Invocation.method(
            #refreshToken,
            [dto],
          ),
        )),
      ) as _i3.Future<_i2.EngineResult<String, _i2.EngineTokenResponseDto>>);
}
